name: CI

on:
  pull_request:
  push:
    branches: [main, development]

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [frontend, backend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ${{ matrix.project }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        project: [frontend, backend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.project }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
      - name: Run ESLint
        working-directory: ${{ matrix.project }}
        run: npm run lint

  format:
    name: Formatting Check
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        project: [frontend, backend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.project }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
      - name: Run Prettier
        working-directory: ${{ matrix.project }}
        run: npm run format:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint, format]
    strategy:
      matrix:
        project: [frontend, backend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.project }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
      - name: Run Tests
        working-directory: ${{ matrix.project }}
        run: npm test -- --ci --watchAll=false

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        project: [frontend, backend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: ${{ matrix.project }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
      - name: Run Build
        working-directory: ${{ matrix.project }}
        run: npm run build
